// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-macos10.15 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Localazy_macOS
import Combine
import Compression
import Foundation
@_exported import Localazy_macOS
import OSLog
import Swift
public struct StatisticsConfiguration {
  public var configurationFromAdditionalData: Swift.Bool {
    get
  }
  public var statsEnabled: Swift.Bool {
    get
  }
  public var updateInterval: Swift.Int32 {
    get
  }
  public var updateIntervalForFailure: Swift.Int32 {
    get
  }
  public var statsInterval: Swift.Int32 {
    get
  }
  public var statsIntervalForFailure: Swift.Int32 {
    get
  }
  public var updateDelay: Swift.Int32 {
    get
  }
  public var statsDelay: Swift.Int32 {
    get
  }
  public var minimalStatsSize: Swift.Int32 {
    get
  }
  public var maximalStatsSize: Swift.Int32 {
    get
  }
  public var updateForActivityOnly: Swift.Bool {
    get
  }
  public var sendStatsRegularly: Swift.Bool {
    get
  }
}
extension NSNotification.Name {
  public static let localazyMissingTextFound: Foundation.Notification.Name
  public static let localazyStringsUpdateStarted: Foundation.Notification.Name
  public static let localazyStringsUpdateFinished: Foundation.Notification.Name
  public static let localazyStringsUpdateFailed: Foundation.Notification.Name
  public static let localazyStringsUpdateNotNecessary: Foundation.Notification.Name
  public static let localazyStringsLoaded: Foundation.Notification.Name
}
extension Localazy.LocalazyError {
  public init(with statusCode: Swift.Int)
  public var errorCode: Swift.Int? {
    get
  }
}
extension Localazy.LocalazyError : Foundation.LocalizedError {
  public var errorDescription: Swift.String? {
    get
  }
}
@_hasMissingDesignatedInitializers final public class LocalazyLocale {
  final public var localazyId: Localazy_macOS.Localazy.LangID {
    get
  }
  final public var language: Swift.String {
    get
  }
  final public var country: Swift.String? {
    get
  }
  final public var script: Swift.String? {
    get
  }
  final public var name: Swift.String {
    get
  }
  final public var localizedName: Swift.String {
    get
  }
  final public var complete: Swift.Bool
  @objc deinit
}
extension LocalazyLocale : Swift.CustomStringConvertible {
  final public var description: Swift.String {
    get
  }
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class Localazy : ObjectiveC.NSObject {
  public typealias LangID = Swift.UInt16
  public typealias TranslationKeyID = Swift.UInt
  public enum LocalazyError : Swift.Error {
    case invalidRequest
    case invalidAuthorization
    case invalidAppPackageOrCertificate
    case updatePackageNotFound
    case accountLimit
    case libraryOutdated
    case tooManyRequests
    case unknown
    public static func == (a: Localazy_macOS.Localazy.LocalazyError, b: Localazy_macOS.Localazy.LocalazyError) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  public static let shared: Localazy_macOS.Localazy
  final public var projectId: Swift.String? {
    get
  }
  @objc deinit
}
extension Localazy {
  final public func forceReload()
  final public func getString(for key: Swift.String) -> Swift.String
  final public func getArrayList(for key: Swift.String) -> [Swift.String]
  final public func getPlural(for key: Swift.String, quantity: Swift.Int) -> Swift.String
  final public func setEnabled(_ isEnabled: Swift.Bool)
  final public func getProjectUrl() -> Foundation.URL?
  final public func getCurrentLocale() -> Foundation.Locale?
  final public func getCurrentLocalazyLocale() -> Localazy_macOS.LocalazyLocale?
  final public func isFullyTranslated() -> Swift.Bool
  final public func getLocales() -> [Localazy_macOS.LocalazyLocale]
  final public func isStatsEnabled() -> Swift.Bool
  final public func setStatsEnabled(_ statsEnabled: Swift.Bool)
}
public enum NetworkManagerError : Swift.Error {
  case noResponse
  case unexpectedHttpResponse(statusCode: Swift.Int?)
  case urlError(error: Foundation.URLError)
  case decodingError(error: Swift.Error?, json: Swift.String?)
  case unknownError(error: Swift.Error?)
  case cannotCreateUrl
}
extension NetworkManagerError : Foundation.LocalizedError {
  public var localizedDescription: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers final public class LocalazyID {
  final public var langId: Localazy_macOS.Localazy.LangID {
    get
  }
  final public var projectId: Swift.String {
    get
  }
  final public var phraseId: Localazy_macOS.Localazy.TranslationKeyID {
    get
  }
  final public var hidden: Swift.Bool {
    get
  }
  final public var phraseUrl: Foundation.URL {
    get
  }
  @objc deinit
}
extension String {
  public var localazyLocalized: Swift.String {
    get
  }
}
extension Localazy_macOS.Localazy.LocalazyError : Swift.Equatable {}
extension Localazy_macOS.Localazy.LocalazyError : Swift.Hashable {}
